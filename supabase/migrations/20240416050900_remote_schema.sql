
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";

COMMENT ON SCHEMA "public" IS 'standard public schema';

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "vector" WITH SCHEMA "extensions";

CREATE TYPE "public"."model" AS ENUM (
    'sonar-small-chat',
    'sonar-medium-chat',
    'codellama-70b-instruct',
    'mistral-7b-instruct',
    'mixtral-8x7b-instruct'
);

ALTER TYPE "public"."model" OWNER TO "postgres";

CREATE OR REPLACE FUNCTION "public"."match_dohas"("query_embedding" "extensions"."vector", "match_threshold" double precision, "match_count" integer) RETURNS TABLE("id" bigint, "doha_hi" "text", "similarity" double precision)
    LANGUAGE "sql" STABLE
    AS $$
  select
    dohas.id,
    dohas.doha_hi,
    1 - (dohas.embedding <=> query_embedding) as similarity
  from dohas
  where 1 - (dohas.embedding <=> query_embedding) > match_threshold
  order by (dohas.embedding <=> query_embedding) asc
  limit match_count;
$$;

ALTER FUNCTION "public"."match_dohas"("query_embedding" "extensions"."vector", "match_threshold" double precision, "match_count" integer) OWNER TO "postgres";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE IF NOT EXISTS "public"."dohas" (
    "id" integer NOT NULL,
    "doha_hi" "text" NOT NULL,
    "doha_en" "text" NOT NULL,
    "meaning_en" "text" NOT NULL,
    "embedding" "extensions"."vector"(384)
);

ALTER TABLE "public"."dohas" OWNER TO "postgres";

CREATE SEQUENCE IF NOT EXISTS "public"."dohas_id_seq"
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

ALTER TABLE "public"."dohas_id_seq" OWNER TO "postgres";

ALTER SEQUENCE "public"."dohas_id_seq" OWNED BY "public"."dohas"."id";

CREATE TABLE IF NOT EXISTS "public"."models" (
    "model" "public"."model" NOT NULL,
    "active" boolean
);

ALTER TABLE "public"."models" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."prompts" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "prompt" "text",
    "comment" "text",
    "active" boolean
);

ALTER TABLE "public"."prompts" OWNER TO "postgres";

ALTER TABLE "public"."prompts" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."prompts_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE OR REPLACE VIEW "public"."random_doha" AS
 SELECT "dohas"."id",
    "dohas"."doha_hi",
    "dohas"."doha_en",
    "dohas"."meaning_en",
    "dohas"."embedding"
   FROM "public"."dohas"
  ORDER BY ("random"())
 LIMIT 1;

ALTER TABLE "public"."random_doha" OWNER TO "postgres";

ALTER TABLE ONLY "public"."dohas" ALTER COLUMN "id" SET DEFAULT "nextval"('"public"."dohas_id_seq"'::"regclass");

ALTER TABLE ONLY "public"."dohas"
    ADD CONSTRAINT "dohas_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."models"
    ADD CONSTRAINT "models_pkey" PRIMARY KEY ("model");

ALTER TABLE ONLY "public"."prompts"
    ADD CONSTRAINT "prompts_pkey" PRIMARY KEY ("id");

CREATE POLICY "Enable read access for all users" ON "public"."dohas" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."models" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."prompts" FOR SELECT USING (true);

ALTER TABLE "public"."dohas" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."models" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."prompts" ENABLE ROW LEVEL SECURITY;

ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";

GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON TABLE "public"."dohas" TO "anon";
GRANT ALL ON TABLE "public"."dohas" TO "authenticated";
GRANT ALL ON TABLE "public"."dohas" TO "service_role";

GRANT ALL ON SEQUENCE "public"."dohas_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."dohas_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."dohas_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."models" TO "anon";
GRANT ALL ON TABLE "public"."models" TO "authenticated";
GRANT ALL ON TABLE "public"."models" TO "service_role";

GRANT ALL ON TABLE "public"."prompts" TO "anon";
GRANT ALL ON TABLE "public"."prompts" TO "authenticated";
GRANT ALL ON TABLE "public"."prompts" TO "service_role";

GRANT ALL ON SEQUENCE "public"."prompts_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."prompts_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."prompts_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."random_doha" TO "anon";
GRANT ALL ON TABLE "public"."random_doha" TO "authenticated";
GRANT ALL ON TABLE "public"."random_doha" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
